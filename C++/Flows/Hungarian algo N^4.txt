const int G = 101, inf = 1e9;
int a, m[G][G], mt1[G], mt2[G], row[G], col[G], us[G], viz1[G], viz2[G];

int kyn(int v){
    viz1[v] = 1;
    if(us[v]) return 0;
    us[v] = 1;
    for(int h=0; h<a; h++){
        if(row[v]+col[h] != m[v][h]) continue;
        viz2[h] = 1;
        if(mt2[h]==-1 || kyn(mt2[h])){
            mt1[v] = h;
            mt2[h] = v;
            return 1;
        }
    }
    return 0;
}

int main() {
    fast;
    cin>>a;
    for(int q=0; q<a; q++){
        for(int w=0; w<a; w++){
            cin>>m[q][w];
        }
    }
    memset(row, 0, sizeof(row));
    memset(col, 0, sizeof(col));
    memset(mt1, -1, sizeof(mt1));
    memset(mt2, -1, sizeof(mt2));
    int sz = 0;
    for(; sz<a;){
        for(;;){
            memset(viz1, 0, sizeof(viz1));
            memset(viz2, 0, sizeof(viz2));
            int fl = 0;
            for(int q=0; q<a; q++){
                if(mt1[q]!=-1) continue;
                memset(us, 0, sizeof(us));
                if(kyn(q)) {
                    sz++;
                    fl = 1;
                }
            }
            if(!fl) break;
        }
        int mn = inf;
        for(int q=0; q<a; q++){
            if(!viz1[q]) continue;
            for(int w=0; w<a; w++){
                if(!viz2[w]) mn = min(mn, m[q][w]-row[q]-col[w]);
            }
        }
        for(int q=0; q<a; q++) if(viz1[q]) row[q] += mn;
        for(int q=0; q<a; q++) if(viz2[q]) col[q] -= mn;
    }
    int o = 0;
    for(int q=0; q<a; q++) o += row[q] + col[q];
    cout<<o;
}